# vi: set ft=sh
#
# http://www.linuxfromscratch.org/lfs/view/development/chapter02/creatingpartition.html

. ./lfs-env

#
#  TODO: Set echo_or_sudo to echo to verify commands
#
echo_or_sudo=sudo

memory_size_kb=$(cat /proc/meminfo | grep '^MemTotal:' | awk '{print $2}')
memory_size_mb=$(( $memory_size_kb / 1024 ))

$echo_or_sudo dd bs=1024 count=$((1024 * 25 )) if=/dev/zero of=/dev/$lfs_partition_device

$echo_or_sudo parted /dev/$lfs_partition_device -s mklabel gpt

$echo_or_sudo parted -s /dev/$lfs_partition_device  \
   mkpart lfs_boot_partition ext4     1MiB 100MiB   \
   mkpart lfs_root_partition ext4   100MiB  10GiB   \
   mkpart lfs_swap_partition ext4    10GiB $(( 10*1024 + 2*$memory_size_mb ))MiB \
   print


#
# Create filesystems on new partitions
#
# http://www.linuxfromscratch.org/lfs/view/development/chapter02/creatingfilesystem.html
#
#  use -v for verbose output in mkfs
#  -F: don't ask, just create
#
sleep 0.1  # Take a brief nap in order to prevent »The file /dev/... does not exist and no size was specified.«
#
#
$echo_or_sudo mkfs -F -t ext4 /dev/${lfs_partition_device}${lfs_boot_partition_nr}
$echo_or_sudo mkfs -F -t ext4 /dev/${lfs_partition_device}${lfs_root_partition_nr}
$echo_or_sudo mkswap          /dev/${lfs_partition_device}3

./02.mount-lfs-partition

if [[ $(ls $LFS) != 'lost+found' ]]; then
   echo "ls $LFS is $(ls $LFS) !!!"
   exit 1
fi
